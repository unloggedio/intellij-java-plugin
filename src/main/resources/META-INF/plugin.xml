<idea-plugin>
    <id>org.videobug.videobug</id>
    <name>Unlogged</name>
    <vendor email="support@bug.video" url="https://unlogged.io">Unlogged</vendor>

    <idea-version since-build="193.5233.102"/>

    <description>
        <![CDATA[
            We are excited to introduce the latest release of our IntelliJ Plugin, designed to 10x your unit testing experience. In this version, we have focused on providing a seamless way to save, delete, and update Atomic Tests in JSON format, allowing you to easily collaborate with your team members using Git.
            <br/>
            Key Features:
            <ul>
                <li>Save, delete, and update Atomic Tests in JSON format: With this release, you can now create Atomic Tests and save them as JSON files. You have the flexibility to update or delete these tests as per your requirements. This functionality enables easy sharing and collaboration with your teammates.</li>
            </ul>
            <br/>

            How to Use:
            <br/>
            <ol>
                <li> Installation:
                    <ul>
                        <li>Install Unlogged Plugin from the marketplace.</li>
                        <li>Make sure to add our agent to your project by following the instructions in the plugin.</li>
                    </ul>
                </li>

                <li> Running the Application:
                    <ul>
                        <li>Run your Java application with the added agent. The agent facilitates the recording of input and return values for each method.</li>
                    </ul>
                </li>

                <li> Use your application:
                    <ul>
                        <li>Use Direct Invoke inside the plugin to call any Java function directly.</li>
                        <li>Use Postman, Swagger or your UI to send data to your backed application.</li>
                    </ul>
                </li>

                <li> Checking Atomic Tests:
                    <ul>
                        <li>Atomic Tests tab will show you the input and return values for each method you accessed earlier.</li>
                    </ul>
                </li>

                <li> Replay and Evaluate:
                    <ul>
                        <li>Replay your Atomic Tests directly from the IntelliJ IDE.</li>
                        <li>Evaluate the return values of the test to ensure its correctness.</li>
                    </ul>
                </li>

                <li> Saving Atomic Tests:
                    <ul>
                        <li>After running and validating an Atomic Test, save it using the provided functionality.</li>
                        <li>The saved test will be stored as a JSON artifact inside the `.unlogged` folder within your project directory.</li>
                    </ul>
                </li>

                <li> Collaboration with Teammates:
                    <ul>
                        <li>Commit the saved Atomic Tests to your Git repository, enabling your team members to access and utilize the same set of tests.</li>
                        <li>Teammates can pull the Atomic Tests from the Git repository and run them seamlessly, streamlining the testing process.</li>
                    </ul>
                </li>
            </ol>
            We believe that these new features will significantly enhance your testing workflow and improve collaboration within your development team. Download the latest version of our IntelliJ Plugin now to take advantage of these exciting enhancements! Itâ€™s free and works fully offline.
            <br/>

            Please note: If you encounter any issues or have suggestions for further improvements, please don't hesitate to reach out to us on our discord channel. We value your feedback and are committed to continuously improving our plugin.
        ]]>
    </description>

    <!-- please see https://plugins.jetbrains.com/docs/intellij/plugin-compatibility.html
         on how to target different products -->
    <depends>com.intellij.modules.platform</depends>
    <depends>com.intellij.modules.xdebugger</depends>
    <depends>com.intellij.modules.java</depends>
    <depends>org.jetbrains.kotlin</depends>
    <depends>org.jetbrains.idea.maven</depends>
    <depends>org.jetbrains.plugins.gradle</depends>
    <depends>org.jetbrains.plugins.gradle.maven</depends>
    <actions>
        <!-- Add your actions here -->

        <action class="com.insidious.plugin.actions.ShowRawView">
            <keyboard-shortcut keymap="$default" first-keystroke="alt F6" second-keystroke="F9"/>
        </action>

        <action class="com.insidious.plugin.actions.ToggleReporting">
            <keyboard-shortcut keymap="$default" first-keystroke="alt F6" second-keystroke="F8"/>
        </action>

        <!--        <action icon="AllIcons.Actions.Back" text="Step Back" id="Debugger.ReverseResume"-->
        <!--                class="com.insidious.plugin.actions.JumpBack">-->
        <!--            <add-to-group relative-to-action="StepOver" group-id="XDebugger.ToolWindow.TopToolbar" anchor="before"/>-->
        <!--            <keyboard-shortcut keymap="$default" first-keystroke="alt R" second-keystroke="F9"/>-->
        <!--        </action>-->


        <!--        <group id="Demo.BackStatement" text="Go back in time using this" description="Jump backwards using this button">-->
        <!--            <add-to-group group-id="MainToolBar" anchor="last"/>-->
        <!--            <action class="com.insidious.plugin.actions.JumpBack" description="Test Description" id="jumpBack"-->
        <!--                    text="Jump Back"-->
        <!--                    icon="AllIcons.Actions.Back"/>-->
        <!--        </group>-->

        <!--        <group id="Demo.NextStatement" text="Go Forward in time using this"-->
        <!--               description="Jump forward using this button">-->
        <!--            <add-to-group group-id="MainToolBar" anchor="last"/>-->
        <!--            <action class="com.insidious.plugin.actions.JumpForward" description="Test Description" id="jumpForward"-->
        <!--                    text="Jump Forward"-->
        <!--                    icon="AllIcons.Debugger.NextStatement"/>-->
        <!--        </group>-->

    </actions>

    <extensions defaultExtensionNs="com.intellij">
        <!--        <notificationGroup id="com.insidious" displayType="BALLOON"/>-->
        <!--        <postStartupActivity implementation="com.insidious.plugin.factory.InsidiousService"/>-->
        <toolWindow id="Unlogged" canCloseContents="false" secondary="false" icon="/icons/png/logo_unlogged.png"
                    anchor="right"
                    factoryClass="com.insidious.plugin.factory.DebuggerFactory"/>
        <projectService serviceImplementation="com.insidious.plugin.factory.InsidiousService"/>
        <applicationService serviceImplementation="com.insidious.plugin.factory.AgentDownloadService" />
        <projectService serviceImplementation="com.insidious.plugin.factory.InsidiousConfigurationState"/>
        <!--        <programRunner implementation="com.insidious.plugin.extension.InsidiousProgramRunner"/>-->
        <!--        <configurationType implementation="com.insidious.plugin.extension.InsidiousRunConfigType"/>-->
        <!--        <executor implementation="com.insidious.plugin.extension.InsidiousExecutor"/>-->
    </extensions>

    <extensions defaultExtensionNs="com.intellij">
        <codeInsight.lineMarkerProvider
                language="JAVA"
                implementationClass="com.insidious.plugin.ui.highlighter.LineHighlighter"/>
        <codeInsight.lineMarkerProvider
                language="kotlin"
                implementationClass="com.insidious.plugin.ui.highlighter.KotlinLineHighlighter"/>
        <codeInsight.inlayProvider implementationClass="com.insidious.plugin.inlay.InsidiousInlayHintsProvider"
                                   language="JAVA"/>
    </extensions>
    <projectListeners>
        <listener class="com.insidious.plugin.factory.InsidiousService"
                  topic="com.intellij.openapi.vcs.BranchChangeListener"/>
    </projectListeners>
</idea-plugin>