<idea-plugin>
    <id>org.videobug.videobug</id>
    <name>Unlogged</name>
    <vendor email="support@bug.video" url="https://unlogged.io">Unlogged</vendor>

    <idea-version since-build="213.7172.25"/>

    <description>
        <![CDATA[

            <h3 id="release-notes-unlogged-io-s-latest-gem-a-10x-java-developer-s-dream-come-true">Release Notes: Unlogged.io&#39;s Latest Gem üíé - A 10x Java Developer&#39;s Dream Come True</h3>
            <h4 id="granular-performance-tracking-because-every-millisecond-counts-">Granular Performance Tracking: Because Every Millisecond Counts ‚è±Ô∏è</h4>
            <p>Gone are the days when performance tracking was just a distant, API-level dream. With our newest spectacle, you can now see precisely what time each method takes, down to the most minuscule detail. It&#39;s like having a microscope for your code, but instead of looking at germs, you&#39;re watching your methods dance in real-time. Welcome to the future, where every millisecond is accounted for, and every performance hiccup is spotted faster than you can say &quot;Java&quot;.</p>
            <h4 id="ghost-icon-spookily-simple-mocking-">Ghost Icon: Spookily Simple Mocking üëª</h4>
            <p>Clicking on our ghost icon allows you to mock db calls, API calls, Redis calls, downstream services, and file operations with the recorded data. Yes, you read that right. One click. No more wrestling with bloated containers that eat up your system resources like there&#39;s no tomorrow. It&#39;s so easy, it&#39;s almost scary. Our ghost icon is here to make your developer life a breeze, not to haunt your nightmares.</p>
            <h4 id="save-replays-with-a-snap-auto-magical-assertions-">Save Replays with a Snap: Auto-Magical Assertions ‚ú®</h4>
            <p>Imagine saving replays of all methods at once, with a mere selection. That&#39;s not just imagination now; it&#39;s reality. Unlogged auto-defines assertions for you, because who has the time to manually do that? Not you, busy Java developers. Our platform automatically saves and maps mocks to replays, making your testing workflow smoother than a hot knife through butter.</p>
            <h4 id="integration-or-unit-we-don-t-discriminate-test-your-heart-out-">Integration or Unit, We Don&#39;t Discriminate: Test Your Heart Out ‚ù§Ô∏è</h4>
            <p>Run your replays in unit or integration mode using mvn test or ./gradlew test. Getting a test report has never been easier. It&#39;s like choosing between chocolate and vanilla ‚Äî regardless of your pick, the outcome is sweet. With Unlogged, testing becomes less of a chore and more of a choice.</p>
            <h4 id="commit-like-a-pro-replay-tests-at-your-fingertips-">Commit Like a Pro: Replay Tests at Your Fingertips üèÜ</h4>
            <p>The replay tests we create reside cozily inside the /test/resources/unlogged folder. This means you can commit and push these tests to your repo with the swagger of a cowboy at high noon. Show off your testing prowess and make your team members green with envy. Or better yet, share the love and let them in on the secret to your success.</p>
            <h4 id="context-reading-because-we-care-about-the-details-">Context Reading: Because We Care About the Details üîç</h4>
            <p>Unlogged can now read the saved context for authentication and other headers, because we understand that the devil is in the details. No more manual tinkering or guessing games. It&#39;s like we&#39;ve handed you the keys to the kingdom of efficiency.</p>
            <p>Java development can sometimes feel like a battle, but Unlogged.io&#39;s latest release is the cavalry coming over the hill. </p>
            <p>So saddle up, developers! With our tool, you&#39;re not just coding; you&#39;re crafting a masterpiece with the precision of a watchmaker and the vision of an artist. </p>
            <p>Happy coding! ‚Ä®</p>


        ]]>
    </description>
<!--    <product-descriptor code="PUNLOGGED" release-date="20240412" release-version="20241"/>-->
    <version>2024.1.1</version>
    <!-- please see https://plugins.jetbrains.com/docs/intellij/plugin-compatibility.html
         on how to target different products -->
    <depends>com.intellij.modules.platform</depends>
    <depends>com.intellij.modules.xdebugger</depends>
    <depends>com.intellij.modules.java</depends>
    <depends>org.jetbrains.kotlin</depends>
    <depends>org.jetbrains.idea.maven</depends>
    <actions>
        <!-- Add your actions here -->

        <action class="com.insidious.plugin.actions.ShowRawView">
            <keyboard-shortcut keymap="$default" first-keystroke="alt F6" second-keystroke="F9"/>
        </action>

        <action class="com.insidious.plugin.actions.ToggleReporting">
            <keyboard-shortcut keymap="$default" first-keystroke="alt F9"/>
        </action>

        <action class="com.insidious.plugin.actions.AutoExecutorOptions">
            <keyboard-shortcut keymap="$default" first-keystroke="alt F6" second-keystroke="F8"/>
        </action>

        <!--        <action icon="AllIcons.Actions.Back" text="Step Back" id="Debugger.ReverseResume"-->
        <!--                class="com.insidious.plugin.actions.JumpBack">-->
        <!--            <add-to-group relative-to-action="StepOver" group-id="XDebugger.ToolWindow.TopToolbar" anchor="before"/>-->
        <!--            <keyboard-shortcut keymap="$default" first-keystroke="alt R" second-keystroke="F9"/>-->
        <!--        </action>-->


        <!--        <group id="Demo.BackStatement" text="Go back in time using this" description="Jump backwards using this button">-->
        <!--            <add-to-group group-id="MainToolBar" anchor="last"/>-->
        <!--            <action class="com.insidious.plugin.actions.JumpBack" description="Test Description" id="jumpBack"-->
        <!--                    text="Jump Back"-->
        <!--                    icon="AllIcons.Actions.Back"/>-->
        <!--        </group>-->

        <!--        <group id="Demo.NextStatement" text="Go Forward in time using this"-->
        <!--               description="Jump forward using this button">-->
        <!--            <add-to-group group-id="MainToolBar" anchor="last"/>-->
        <!--            <action class="com.insidious.plugin.actions.JumpForward" description="Test Description" id="jumpForward"-->
        <!--                    text="Jump Forward"-->
        <!--                    icon="AllIcons.Debugger.NextStatement"/>-->
        <!--        </group>-->

    </actions>

    <extensions defaultExtensionNs="com.intellij">
        <!--        <notificationGroup id="com.insidious" displayType="BALLOON"/>-->
        <!--        <postStartupActivity implementation="com.insidious.plugin.factory.InsidiousService"/>-->
        <toolWindow id="Unlogged" canCloseContents="false" secondary="false" icon="/icons/png/logo_unlogged.png"
                    anchor="right" factoryClass="com.insidious.plugin.factory.InsidiousToolWindowFactory"/>

        <applicationService serviceImplementation="com.insidious.plugin.factory.ActiveSessionManager"/>
        <applicationService serviceImplementation="com.insidious.plugin.factory.SessionLoader"/>
        <!--        <applicationService serviceImplementation="com.insidious.plugin.factory.ApplicationConfigurationState"/>-->


        <codeInsight.lineMarkerProvider
                language="JAVA"
                implementationClass="com.insidious.plugin.ui.highlighter.UnloggedGutterStateProvider"/>
        <codeInsight.lineMarkerProvider
                language="JAVA"
                implementationClass="com.insidious.plugin.ui.highlighter.MockMethodLineHighlighter"/>
        <!--        <codeInsight.lineMarkerProvider-->
        <!--                language="kotlin"-->
        <!--                implementationClass="com.insidious.plugin.ui.highlighter.KotlinLineHighlighter"/>-->
        <codeInsight.inlayProvider implementationClass="com.insidious.plugin.inlay.InsidiousInlayHintsProvider"
                                   language="JAVA"/>
        <errorHandler implementation="com.insidious.plugin.exceptionhandler.InsidiousExceptionReportSubmitter"/>

        <!--        <coverageEngine implementation="com.insidious.plugin.coverage.InsidiousCoverageEngine"-->
        <!--                        id="insidiousCoverageEngine"/>-->
    </extensions>
    <projectListeners>
        <listener class="com.insidious.plugin.factory.InsidiousToolWindowManagerListener"
                  topic="com.intellij.openapi.wm.ex.ToolWindowManagerListener"/>
        <listener class="com.insidious.plugin.factory.AgentConnectionStateTracker"
                  topic="com.insidious.plugin.agent.AgentConnectionStateNotifier"/>
    </projectListeners>
</idea-plugin>